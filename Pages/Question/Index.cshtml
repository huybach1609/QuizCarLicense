@page
@using QuizCarLicense.Utils
@using QuizCarLicense.Constrains
@model QuizCarLicense.Pages.Question.Index
@{
    string traloicss = "bg-gray-200 p-3 rounded-md mb-2 text-gray-900 text-sm hover:bg-gray-300";
    string traloitruecss = "bg-green-200 p-3 rounded-md mb-2 text-green-900 text-sm";
    string btncss = "py-2.5 px-5 me-2 mb-2 text-sm font-medium text-gray-900 focus:outline-none bg-white rounded-full border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-4 focus:ring-gray-100 dark:focus:ring-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700";
    string checkboxcss = "w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600";
    string inputcss = "bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500";
    string labelcss = "block mb-2 text-sm font-medium text-gray-900 dark:text-white";

    bool viewAsAdmin = User.IsInRole(UserRole.Admin.ToString());
    bool isUpdate = Model.QuestionStore.QuestionId > 0;
}

<div class="px-2 py-4 sm:px-4">
    @* Preview question *@
    <div class="mb-4 rounded-lg bg-white p-3 shadow dark:bg-gray-800 sm:p-4">
        <div class="mb-3 text-lg font-medium leading-tight text-gray-700 dark:text-white sm:text-xl md:text-2xl">
            Preview question
        </div>

        @if (Model.QuestionStore == null)
        {
            <div class="p-4 text-center text-gray-500">nothing to show</div>
        }
        else
        {
            @if (Model.QuestionStore.Image != null)
            {
                <figure class="mb-4">
                    <img class="h-auto w-full max-w-full rounded-lg sm:max-w-lg sm:mx-auto"
                         src="@Model.QuestionStore.Image"
                         alt="Question image">
                    <figcaption class="mt-2 text-center text-xs text-gray-500 dark:text-gray-400 sm:text-sm">
                        Figure: Question @Model.QuestionStore.QuestionId
                    </figcaption>
                </figure>
            }

            <div class="mb-3 flex flex-col gap-2 sm:flex-row sm:justify-between sm:items-start">
                <div class="text-sm font-semibold text-gray-700 dark:text-gray-300 sm:text-base">
                    @Model.QuestionStore.QuestionId. @Model.QuestionStore.Content
                </div>
                @if (viewAsAdmin)
                {
                    <a asp-page-handler="Delete"
                       asp-route-code="@Model.QuestionStore.QuestionId"
                       onclick="return confirm('Delete quiz @Model.QuestionStore.QuestionId?')"
                       class="flex-shrink-0 text-red-500 hover:text-red-700">
                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <path d="M3 6h18" />
                            <path d="M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6" />
                            <path d="M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2" />
                            <line x1="10" x2="10" y1="11" y2="17" />
                            <line x1="14" x2="14" y1="11" y2="17" />
                        </svg>
                    </a>
                }
            </div>

            @if (Model.QuestionStore.QuizAnswers?.Any() == true)
            {
                <ul class="grid grid-cols-1 gap-2 sm:grid-cols-2 sm:gap-3">
                    @foreach (var ans in Model.QuestionStore.QuizAnswers)
                    {
                        @if (!ans.Content.Equals("none"))
                        {
                            <li class="@(ans.IsCorrect? traloitruecss : traloicss)">@ans.Content</li>
                        }
                    }
                </ul>
            }
            else
            {
                <div class="p-4 text-center text-gray-500">nothing to show</div>
            }
        }
    </div>

    @* List question *@
    <div class="mb-4 rounded-lg bg-white shadow dark:bg-gray-800">
        <div class="p-3 text-lg font-medium text-gray-700 dark:text-white sm:p-4 sm:text-xl md:text-2xl">
            List
        </div>

        @* Mobile card view *@
        <div class="block sm:hidden">
            @foreach (var q in Model.ListQuestion)
            {
                <div class="border-b border-gray-200 p-3 dark:border-gray-700">
                    <div class="mb-2 flex items-start justify-between">
                        <span class="font-semibold text-gray-900 dark:text-white">Q.@q.QuestionId</span>
                        <span class="rounded bg-blue-100 px-2 py-1 text-xs font-medium text-blue-800 dark:bg-blue-900 dark:text-blue-300">
                            Score: @q.Score
                        </span>
                    </div>
                    <p class="mb-2 text-sm text-gray-700 dark:text-gray-300">@q.Content</p>
                    <div class="flex items-center justify-between">
                        <span class="text-xs @(q.Active ? "text-green-600" : "text-gray-500")">
                            @(q.Active ? "Active" : "Inactive")
                        </span>
                        <a asp-page-handler="Preview"
                           asp-route-id="@q.QuestionId"
                           class="text-sm font-medium text-blue-600 hover:underline dark:text-blue-500">
                            Preview →
                        </a>
                    </div>
                </div>
            }
        </div>

        @* Desktop table view *@
        <div class="hidden h-96 overflow-y-auto sm:block">
            <table class="w-full text-left text-sm text-gray-500 dark:text-gray-400">
                <thead class="sticky top-0 z-10 bg-gray-50 text-xs uppercase text-gray-700 dark:bg-gray-700 dark:text-gray-400">
                    <tr>
                        <th scope="col" class="px-6 py-3">QuestionId</th>
                        <th scope="col" class="px-6 py-3">Score</th>
                        <th scope="col" class="px-6 py-3">Content</th>
                        <th scope="col" class="px-6 py-3">Active</th>
                        <th scope="col" class="px-6 py-3"><span class="sr-only">Edit</span></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var q in Model.ListQuestion)
                    {
                        <tr class="border-b bg-white hover:bg-gray-50 dark:border-gray-700 dark:bg-gray-800 dark:hover:bg-gray-600">
                            <th scope="row" class="whitespace-nowrap px-6 py-4 font-medium text-gray-900 dark:text-white">
                                @q.QuestionId
                            </th>
                            <td class="px-6 py-4">@q.Score</td>
                            <td class="px-6 py-4">@q.Content</td>
                            <td class="px-6 py-4">@q.Active</td>
                            <td class="px-6 py-4 text-right">
                                <a asp-page-handler="Preview"
                                   asp-route-id="@q.QuestionId"
                                   class="font-medium text-blue-600 hover:underline dark:text-blue-500">
                                    preview
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    @* Pagination *@
    <div class="mb-4 flex justify-center">
        <nav aria-label="Page navigation">
            <ul class="flex h-8 items-center -space-x-px text-xs sm:text-sm">
                @if (Model.PageTotal > 1)
                {
                    <li>
                        <a asp-route-pageNum="@(Model.PageNum > 1 ? Model.PageNum - 1 : 1)"
                           asp-page-handler="Page"
                           class="ms-0 flex h-8 items-center justify-center rounded-s-lg border border-gray-300 bg-white px-2 leading-tight text-gray-500 hover:bg-gray-100 hover:text-gray-700 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white sm:px-3">
                            <span class="sr-only">Previous</span>
                            <svg class="h-2.5 w-2.5 rtl:rotate-180" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 1 1 5l4 4" />
                            </svg>
                        </a>
                    </li>
                }

                @for (int i = 0; i < Model.PageTotal; i++)
                {
                    <li>
                        <a asp-route-pageNum="@(i + 1)"
                           asp-page-handler="Page"
                           class="@(i == Model.PageNum - 1
                                                          ? "z-10 flex h-8 items-center justify-center border border-blue-300 bg-blue-50 px-2 leading-tight text-blue-600 dark:border-gray-700 dark:bg-gray-700 dark:text-white sm:px-3"
                                                          : "flex h-8 items-center justify-center border border-gray-300 bg-white px-2 leading-tight text-gray-500 hover:bg-gray-100 hover:text-gray-700 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white sm:px-3")">
                        @(i + 1)
                    </a>
                </li>
                                }

                @if (Model.PageTotal > 1)
                {
                    <li>
                        <a asp-route-pageNum="@(Model.PageNum<Model.PageTotal? Model.PageNum + 1 : Model.PageTotal)"
                           asp-page-handler="Page"
                           class="flex h-8 items-center justify-center rounded-e-lg border border-gray-300 bg-white px-2 leading-tight text-gray-500 hover:bg-gray-100 hover:text-gray-700 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white sm:px-3">
                            <span class="sr-only">Next</span>
                            <svg class="h-2.5 w-2.5 rtl:rotate-180" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4" />
                            </svg>
                        </a>
                    </li>
                }
            </ul>
        </nav>
    </div>

    @if (viewAsAdmin)
    {
        @* Add/Edit question form *@
        <div class="rounded-lg bg-white p-3 shadow dark:bg-gray-800 sm:p-4">
            <p class="mb-3 text-base font-medium text-gray-900 dark:text-white sm:text-lg">Question:</p>
            <form asp-page-handler="HandleSubmit" method="post" enctype="multipart/form-data">
                <div asp-validation-summary="All" class="mb-3 text-sm text-red-600"></div>

                <div class="mb-4">
                    <label asp-for="QuestionInput.Content" class="@labelcss">Question Content:</label>
                    <input value="@(Model.QuestionStore?.Content)"
                           asp-for="QuestionInput.Content"
                           class="@inputcss" />
                    <span asp-validation-for="QuestionInput.Content" class="text-xs text-red-600"></span>
                </div>

                <div class="mb-4 flex flex-col gap-4 sm:flex-row sm:gap-6">
                    <div class="flex-1">
                        <label asp-for="QuestionInput.Score" class="@labelcss">Score:</label>
                        <input value="@(Model.QuestionStore?.Score ?? 1)"
                               asp-for="QuestionInput.Score"
                               class="@inputcss" />
                        <span asp-validation-for="QuestionInput.Score" class="text-xs text-red-600"></span>
                    </div>

                    <div class="flex-1">
                        <label asp-for="QuestionInput.ImageFile" class="block mb-2 text-xs text-gray-500 dark:text-gray-300 sm:text-sm">
                            SVG, PNG, JPG or GIF
                        </label>
                        <input asp-for="QuestionInput.ImageFile"
                               class="block w-full cursor-pointer rounded-lg border border-gray-300 bg-gray-50 text-xs text-gray-900 focus:outline-none dark:border-gray-600 dark:bg-gray-700 dark:text-gray-400 dark:placeholder-gray-400 sm:text-sm"
                               type="file"
                               accept="image/*" />
                    </div>
                </div>

                @if (Model.QuestionStore?.Image != null)
                {
                    <figure class="mb-4">
                        <img class="h-auto max-w-full rounded-lg sm:max-w-md"
                             src="@Model.QuestionStore.Image"
                             alt="Question image">
                        <figcaption class="mt-2 text-center text-xs text-gray-500 dark:text-gray-400 sm:text-sm">
                            Current image
                        </figcaption>
                    </figure>
                }

                <div class="mb-4">
                    <p class="mb-3 text-base font-medium text-gray-900 dark:text-white sm:text-lg">Answers:</p>
                    <ul class="grid grid-cols-1 gap-4 sm:grid-cols-2">
                        @for (int i = 0; i < Model.QuestionInput.QuizAnswers.Count; i++)
                        {
                            <li class="rounded-lg border border-gray-200 p-3 dark:border-gray-700">
                                @{
                                    string content = null;
                                    bool isCorrect = false;
                                    int id = -1;

                                    if (Model.QuestionStore?.QuizAnswers != null && i < Model.QuestionStore.QuizAnswers.Count)
                                    {
                                        content = Model.QuestionStore.QuizAnswers.ToList()[i]?.Content;
                                        isCorrect = Model.QuestionStore.QuizAnswers.ToList()[i]?.IsCorrect ?? false;
                                        id = Model.QuestionStore.QuizAnswers.ToList()[i].AnswerId;
                                    }
                                }

                                <label asp-for="QuestionInput.QuizAnswers[i].Content" class="@labelcss">
                                    Answer @(i + 1):
                                </label>
                                <input asp-for="QuestionInput.QuizAnswers[i].AnswerId" type="hidden" value="@id" />
                                <input asp-for="QuestionInput.QuizAnswers[i].Content"
                                       class="@inputcss mb-2"
                                       value="@content" />
                                <span asp-validation-for="QuestionInput.QuizAnswers[i].Content"
                                      class="block text-xs text-red-600"></span>

                                <div class="flex items-center gap-2">
                                    <input asp-for="QuestionInput.QuizAnswers[i].IsCorrect"
                                           type="checkbox"
                                           checked="@isCorrect"
                                           class="@checkboxcss"
                                           id="answer-@i-correct" />
                                    <label for="answer-@i-correct"
                                           class="text-xs font-medium text-gray-900 dark:text-white sm:text-sm">
                                        Is Correct
                                    </label>
                                </div>
                                <span asp-validation-for="QuestionInput.QuizAnswers[i].IsCorrect"
                                      class="block text-xs text-red-600"></span>
                            </li>
                        }
                    </ul>
                </div>

                <div class="flex flex-wrap gap-2">
                    @if (isUpdate)
                    {
                        <input asp-for="QuestionInput.QuestionId"
                               type="hidden"
                               value="@Model.QuestionStore.QuestionId" />
                        <button class="@btncss flex-1 sm:flex-none" type="submit" name="update">
                            Update
                        </button>
                        <a class="@btncss flex items-center justify-center flex-1 sm:flex-none" href="/Question">
                            @Html.Raw(SvgIcons.RefreshIcon)
                            
                        </a>
                    }
                    else
                    {
                        <button class="@btncss w-full sm:w-auto" type="submit" name="insert">
                            Insert
                        </button>
                    }
                </div>
            </form>
        </div>
    }
</div>