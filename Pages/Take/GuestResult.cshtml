@page
@using QuizCarLicense.Constrains
@using QuizCarLicense.DTOs
@model QuizCarLicense.Pages.Take.GuestResultModel
@{
    ViewData["Title"] = "Guest Test Result";
    string btncss = "py-2.5 px-5 text-left text-sm font-medium text-blue-900 focus:outline-none bg-white rounded-lg border border-gray-200 ";
    string containerBtn = "m-4 rounded-lg bg-white p-4 shadow dark:bg-gray-800";
    string btnMaterial = "rounded-full border border-slate-300 py-2 px-4 text-center text-sm transition-all shadow-sm hover:shadow-lg text-slate-600 hover:text-white hover:bg-slate-800 hover:border-slate-800 focus:text-white focus:bg-slate-800 focus:border-slate-800 active:border-slate-800 active:text-white active:bg-slate-800 disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none";
    var listQuestion = Model.TestQuestion;
}

<style>
    .selected {
        background-color: #818cf8;
        color: #1e1b4b;
    }

        .selected:hover {
            background-color: #1e1b4b !important;
            color: #818cf8 !important;
        }

    .rightAns {
        background-color: #bbf7d0;
        color: #14532d;
    }

    .wrongAns {
        background-color: #fee2e2;
        color: #7f1d1d;
    }

    .notFinishAns {
        color: #44403c;
        background-color: #e7e5e4;
    }

    .answer-btn {
        display: block;
        margin: 10px 0;
        padding: 10px;
        cursor: not-allowed;
    }

    .question-container {
        margin-bottom: 20px;
    }

    h2 {
        font-size: 1.5rem;
    }

    #questions-container {
        width: 100%;
    }

    .co {
        height: 76vh;
        overflow-y: auto;
        scroll-behavior: smooth;
    }

        .co::-webkit-scrollbar {
            display: none;
        }

    .sidebar-container {
        width: 300px;
        position: sticky;
        bottom: 90px;
        height: fit-content;
    }

    @@media(max-width: 1024px) {
        .sidebar-container {
            width: 100%;
            position: fixed;
            bottom: 0;
            left: 0;
            right: 0;
            z-index: 30;
            background: rgba(214,221,255,0.55);
            border-top: 1px solid #e5e7eb;
            padding: 1rem;
            max-height: 50vh;
            overflow-y: auto;
            backdrop-filter: blur(12px);
            -webkit-backdrop-filter: blur(12px);
        }

        .co {
            height: calc(100vh - 200px);
            padding-bottom: 200px;
        }

        .main-layout {
            flex-direction: column;
        }

        #questions-container {
            width: 100%;
        }

        .question-grid {
            grid-template-columns: 1fr;
        }

        .mobile-toggle {
            display: block;
        }

        .sidebar-content {
            display: none;
        }

            .sidebar-content.active {
                display: block;
            }
    }

    @@media(min-width: 1025px) {
        .mobile-toggle {
            display: none;
        }

        .sidebar-content {
            display: block !important;
        }
    }
</style>

<!-- Guest Warning Banner -->
<div class="bg-yellow-50 border-l-4 border-yellow-400 p-4 mb-4">
    <div class="flex">
        <div class="flex-shrink-0">
            <svg class="h-5 w-5 text-yellow-400" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />
            </svg>
        </div>
        <div class="ml-3">
            <p class="text-sm text-yellow-700">
                <strong>Guest Mode:</strong> This result is temporary and will be deleted after 24 hours.
                <a asp-page="/Auth/Login" class="font-medium underline hover:text-yellow-800">Sign in</a>
                to save your results permanently.
            </p>
        </div>
    </div>
</div>

<div class="main-layout flex flex-col lg:flex-row pt-4">
    <!-- Questions Container -->
    <div id="questions-container" class="co flex-1">
        @for (int i = 0; i < listQuestion.Count; i++)
        {
            QuestionDTO quesDTO = listQuestion[i];
            <div class="question-block @containerBtn" id="question-@i">
                @if (listQuestion[i].Image != null)
                {
                    <figure class="mx-auto max-w-lg">
                        <img class="h-50 max-w-full rounded-xl" src="@listQuestion[i].Image" alt="image description">
                        <figcaption class="mt-2 text-center text-sm text-gray-500 dark:text-gray-400">Figure: Question @listQuestion[i].Id</figcaption>
                    </figure>
                }

                <div class="flex justify-between font-semibold text-[#1e1b4b]">
                    <span>@(i + 1). @listQuestion[i].Content</span>
                    <span class="text-green-500">@(quesDTO.Status == QuestionStatus.TRUE ? "+1" : "")</span>
                </div>

                <div class="grid-cols-2 grid gap-3">
                    @for (int j = 0; j < listQuestion[i].Answers.Count; j++)
                    {
                        if (!listQuestion[i].Answers[j].Content.Equals("none"))
                        {
                            AnswerDTO ansDTO = listQuestion[i].Answers[j];
                            string rightAns = quesDTO.AnswerId == ansDTO.Id && quesDTO.Status == QuestionStatus.TRUE ? "rightAns" : "";
                            string chooseAns = quesDTO.AnswerId == ansDTO.Id && quesDTO.Status == QuestionStatus.FALSE ? "wrongAns" : "";
                            string rightAnsView = ansDTO.IsCorrect ? "text-green-600" : "";

                            <div class="answer-btn @btncss @chooseAns @rightAns"
                                 data-index="@i"
                                 data-question="@listQuestion[i].Id"
                                 data-answer-id="@listQuestion[i].Answers[j].Id">
                                <div class="@rightAnsView">
                                    @{
                                        char letter = (char)(97 + j);
                                    }
                                    @letter. @listQuestion[i].Answers[j].Content
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        }
    </div>

    <div class="sidebar-container">
        <!-- Mobile Toggle Button -->
        <button id="sidebarToggle" class="mobile-toggle w-full bg-blue-600 text-white py-3 rounded-lg mb-2 lg:hidden">
            <span class="flex items-center justify-center">
                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 5l7 7-7 7M5 5l7 7-7 7" />
                </svg>
                Show Question Navigator
            </span>
        </button>

        <div class="sidebar-content">
            <div class="@containerBtn grid grid-cols-5 md:grid-cols-4 gap-2">
                @for (int i = 0; i < listQuestion.Count; i++)
                {
                    QuestionDTO quesDTO = listQuestion[i];
                    string rightAns = quesDTO.Status == QuestionStatus.TRUE ? "text-green-500 hover:bg-green-100" : "";
                    string chooseAns = quesDTO.Status == QuestionStatus.FALSE ? "text-red-500 hover:bg-red-100" : "";
                    string notfinish = quesDTO.Status == QuestionStatus.NOTFINISH ? "notFinishAns" : "";

                    <a id="link-@listQuestion[i].Id"
                       class="flex h-10 w-10 items-center justify-center rounded-lg border border-gray-300 bg-white text-sm font-medium text-gray-500 @rightAns @chooseAns @notfinish"
                       href="#question-@i">@(i + 1)</a>
                }
            </div>

            <div class="@containerBtn">
                <article class="flex max-w-xl flex-col items-start justify-between">
                    <div class="flex justify-between gap-x-4 text-xs w-full">
                        <time class="text-gray-500">
                            <span>@Model.StartTime.ToString("MMM dd, yyyy")</span>
                            <div>
                                @Model.StartTime.ToString("h:mm tt") - @Model.CompletedAt.ToString("h:mm tt")
                            </div>
                        </time>

                        <a class="relative rounded-full bg-gray-50 px-3 py-1.5 font-medium text-gray-600 hover:bg-gray-100">
                            @Model.Score / @listQuestion.Count
                        </a>
                    </div>
                    <div class="group relative mt-3">
                        <h3 class="text-lg font-semibold leading-6 text-gray-900 group-hover:text-gray-600">
                            <a>
                                <span class="absolute inset-0"></span>
                                Quiz: @Model.QuizObject.Title
                            </a>
                        </h3>
                        <p class="mt-3 line-clamp-3 text-sm leading-6 text-gray-600">
                            @Model.QuizObject.Detail
                        </p>
                    </div>

                    <div class="mt-4 text-sm font-semibold text-gray-900">Quiz created by</div>
                    <div class="relative flex items-center gap-x-4">
                        <div class="text-sm leading-6">
                            <p class="font-semibold text-gray-900">
                                <a>
                                    <span class="absolute inset-0"></span>
                                    @(Model.QuizObject.User?.FullName ?? "Not Found")
                                </a>
                            </p>
                        </div>
                    </div>
                </article>
            </div>

            <div class="flex justify-center gap-5 px-4">
                <a href="/test?quizId=@Model.QuizObject.QuizId"
                   class="@btnMaterial">Test Again</a>
                <a asp-page="/Account/Login"
                   asp-route-returnUrl="@($"/test?quizId={Model.QuizObject.QuizId}")"
                   class="@btnMaterial bg-blue-500 text-white border-blue-500 hover:bg-blue-600">
                    Sign In to Save
                </a>
            </div>
        </div>
    </div>
</div>

<script>
    // Mobile sidebar toggle
    const sidebarToggle = document.getElementById('sidebarToggle');
    const sidebarContent = document.querySelector('.sidebar-content');

    if (sidebarToggle) {
        sidebarToggle.addEventListener('click', () => {
            sidebarContent.classList.toggle('active');
            if (sidebarContent.classList.contains('active')) {
                sidebarToggle.innerHTML = '<span class="flex items-center justify-center"><svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"/></svg>Hide Question Navigator</span>';
            } else {
                sidebarToggle.innerHTML = '<span class="flex items-center justify-center"><svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 5l7 7-7 7M5 5l7 7-7 7"/></svg>Show Question Navigator</span>';
            }
        });
    }
</script>